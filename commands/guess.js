const { logger, config, saveConfig, isOwner, isAdmin } = require('../utils.js')

module.exports = {
    name: 'guess',
    short: 'g',
    desc: 'Sets the guessing game channel',
    args: 'set [channel_name|#channel|channel_id] | create (channel_name) | clear',
    perm: 'admin',
    execute(msg, arg) {
        if (!(isAdmin(msg) && arg)) return
        let id = ''

        switch (arg[0]) {
            case 'clear':
                id = config[msg.guild.id].guess
                if (id) {
                    config[msg.guild.id].guess = ''
                    saveConfig()
                    msg.channel.send(`Removed <#${id}>`).catch((e) => logger.error(e.stack))
                }

                break
            case 'create':
                msg.guild.channels
                    .create(arg[1] ? arg.slice(1).join('-') : 'guess', {
                        permissionOverwrites: [
                            {
                                id: msg.guild.roles.everyone,
                                deny: ['VIEW_CHANNEL', 'SEND_MESSAGES']
                            },
                            { id: config[msg.guild.id].modRole, allow: 'VIEW_CHANNEL' }
                        ],
                        reason: `Auto-generated by ${msg.author.username}`
                    })
                    .then((channel) => {
                        config[msg.guild.id].guess = channel.id
                        saveConfig()
                        msg.channel
                            .send(`Channel set to <#${channel.id}>`)
                            .catch((e) => logger.error(e.stack))
                    })
                    .catch((e) =>
                        msg.channel.send(e.message).catch((e) => logger.error(e.stack))
                    )

                break
            case 'set':
                id = msg.mentions.channels.first()
                if (id) {
                    id = id.id
                } else if (arg[1]) {
                    id = msg.guild.channels.cache.get(arg[1])
                    if (id) {
                        id = id.id
                    } else {
                        id = msg.guild.channels.cache.findKey(
                            (channel) =>
                                channel.name.toLowerCase() ===
                                arg.slice(1).join('-').toLowerCase()
                        )
                    }
                }
                if (id) {
                    config[msg.guild.id].guess = id
                    saveConfig()
                    msg.channel
                        .send(`Channel set to <#${id}>`)
                        .catch((e) => logger.error(e.stack))
                } else {
                    msg.channel
                        .send('Invalid channel supplied :(')
                        .catch((e) => logger.error(e.stack))
                }
        }
    }
}
